import win32com.client
from tkinter import filedialog, Tk

class ExcelManager:
    def __init__(self):
        self.reset()

    def reset(self):
        try:
            if self.workbook:
                self.workbook.Close(SaveChanges=0)
            if self.excel:
                self.excel.Quit()
        except:
            pass
        self.excel = None
        self.workbook = None
        self.file_path = ""
        self.target_sheet = None
        self.target_cell = None

    def attach_excel(self):
        root = Tk()
        root.withdraw()
        file_path = filedialog.askopenfilename(
            title="Select Excel File",
            filetypes=[("Excel files", "*.xlsx *.xls *.xlsm")]
        )
        root.destroy()

        if not file_path:
            return False

        self.reset()

        try:
            self.excel = win32com.client.DispatchEx("Excel.Application")
            self.excel.Visible = True
            self.workbook = self.excel.Workbooks.Open(file_path)

            # Force window to be visible and activated
            self.excel.Windows(self.workbook.Name).Activate()
            self.excel.ActiveWindow.WindowState = -4137  # xlNormal
            self.excel.ActiveWindow.Visible = True

            self.file_path = file_path
            return True
        except Exception as e:
            print(f"❌ Failed to open Excel: {e}")
            self.reset()
            return False

    def set_target(self, sheet_name, cell_ref):
        try:
            self.target_sheet = self.workbook.Sheets(sheet_name)
            self.target_cell = cell_ref
            return True
        except Exception as e:
            print(f"❌ Invalid sheet or cell: {e}")
            return False

    def is_ready(self):
        return all([self.workbook, self.target_sheet, self.target_cell])

    def write_to_cell(self, text):
        try:
            self.target_sheet.Range(self.target_cell).Value = text
            return self.file_path, self.target_sheet.Name, self.target_cell
        except Exception as e:
            raise Exception(f"Write failed: {e}")
